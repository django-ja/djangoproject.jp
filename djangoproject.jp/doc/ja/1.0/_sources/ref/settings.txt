.. _ref-settings:

Available settings
==================

:revision-up-to: 8961 (1.0)

このドキュメントでは、利用可能な全ての設定のリストを示します。リストはアル
ファベット順で、デフォルト値も示します。

.. setting:: ABSOLUTE_URL_OVERRIDES

ABSOLUTE_URL_OVERRIDES
----------------------

デフォルト値: ``{}`` (空の辞書)

モデルオブジェクトのパスを表す文字列 ``"app_label.model_name"`` から、モデ
ルオブジェクトを引数にとり URL を返すような関数への対応づけを行うための辞書
です。 Django で作成したプロジェクトのインストール先ごとに
``get_absolute_url()`` メソッドを上書きするのに役立ちます。例えば::

    ABSOLUTE_URL_OVERRIDES = {
        'blogs.weblog': lambda o: "/blogs/%s/" % o.slug,
        'news.story': lambda o: "/stories/%s/%s/" % (o.pub_year, o.slug),
    }

もとのモデルクラス名で使っている文字ケースに関係なく、モデル名は小文字にせ
ねばならないので注意してください。

.. setting:: ADMIN_FOR

ADMIN_FOR
---------

デフォルト値: ``()`` (空のタプル)

admin 用サイトの設定モジュールで設定します。このサイトの admin を他のサイト
の admin にする場合、設定モジュールを (``'foo.bar.baz'`` の形式のタプルで) 
指定します。

admin サイトはこの変数を使って、モデルやビュー、テンプレートタグのドキュメ
ントに対するイントロスペクションを自動的に行います。

.. setting:: ADMIN_MEDIA_PREFIX

ADMIN_MEDIA_PREFIX
------------------

デフォルト値: ``'/media/'``

Django の管理インタフェース上で使われている CSS, JavaScript, 画像といった、
いわゆる admin メディアへの URL プレフィクスです。必ず末尾にスラッシュをつ
けてください。また、この値は ``MEDIA_URL`` と同じにしないでください (さもな
いと、二つのファイルに同じ URL がマップされてしまいます)。

.. setting:: ADMINS

ADMINS
------

デフォルト値: ``()`` (空のタプル)

コード中で発生したエラーを報告する連絡先を列挙するタプルです。
``DEBUG=False`` の設定で、ビューが例外を送出すると、 Django はこの設定値に
列挙されている相手全てに全ての例外情報の入った通知メールを送ります。タプル
に入れる各メンバは、 (Full name, e-mail address) の形式で指定します。例えば::

    (('John', 'john@example.com'), ('Mary', 'mary@example.com'))

Django はエラーが生じたときに、このリストに登録されている *全ての* 宛先にメー
ルを送信します。詳しくは :ref:`howto-error-reporting` を参照してください。

.. setting:: ALLOWED_INCLUDE_ROOTS

ALLOWED_INCLUDE_ROOTS
---------------------

デフォルト値: ``()`` (空のタプル)

``{% ssi %}`` テンプレートタグで取り込める URL のプレフィクスを表す文字列か
らなるタプルです。この設定はセキュリティを高めるためのもので、テンプレート
の作者に取り込みを禁じられているファイルにアクセスさせないようにします。

例えば、 ``ALLOWED_INCLUDE_ROOTS`` を ``('/home/html', '/var/www')`` にして
おくと、 ``{% ssi /home/html/foo.txt %}`` は期待通りに動作しますが、 
``{% ssi /etc/passwd %}`` はうまくいきません。

.. setting:: APPEND_SLASH

APPEND_SLASH
------------

デフォルト値: ``True``

URL の末尾に常にスラッシュを追加するかどうかを決めます。
``CommonMiddleware`` がインストールされている場合にしか使われません。
(:ref:`topics-http-middleware` を参照してください。) ``PREPEND_WWW`` も参照
してください。

.. setting:: AUTHENTICATION_BACKENDS

AUTHENTICATION_BACKENDS
-----------------------

デフォルト値: ``('django.contrib.auth.backends.ModelBackend',)``

認証バックエンドのクラス名を (文字列で) 列挙したタプルです。ユーザ認証を試
みる際に使われます。詳しくは
:ref:`認証バックエンドのドキュメント <authentication-backends>` を参照して
ください。

.. setting:: AUTH_PROFILE_MODULE

AUTH_PROFILE_MODULE
-------------------

デフォルト値: 定義されていません

サイト固有のユーザプロファイルモデルです。詳しくは  :ref:`auth-profiles`
を参照してください。

.. setting:: CACHE_BACKEND

CACHE_BACKEND
-------------

デフォルト値: ``'locmem://'``

利用するキャッシュバックエンドを指定します。 :ref:`topics-cache` を参照して
ください。

.. setting:: CACHE_MIDDLEWARE_KEY_PREFIX

CACHE_MIDDLEWARE_KEY_PREFIX
---------------------------

デフォルト値: ``''`` (空文字列)

キャッシュミドルウェアが使うキャッシュキープレフィクスを指定します。
:ref:`topics-cache` を参照してください。

.. setting:: CACHE_MIDDLEWARE_SECONDS

CACHE_MIDDLEWARE_SECONDS
------------------------

デフォルト値: ``600``

キャッシュミドルウェアや ``cache_page()`` デコレータを使うときに、ページを
キャッシュしておく秒数のデフォルト値です。

.. setting:: DATABASE_ENGINE

DATABASE_ENGINE
---------------

デフォルト値: ``''`` (空文字列)

どのデータベースバックエンドを使うかを指定します。組み込みのデータベースバッ
クエンドは、 ``'postgresql_psycopg2'``, ``'postgresql'``, ``'mysql'``,
``'sqlite3'``, ``'oracle'`` です。

.. versionchanged:: 1.0

    Django 1.0 から、 Django に組み込まれていないデータベースバックエンドを
    組み込むために、 ``DATABASE_ENGINE`` にバックエンドモジュールの完全指定
    パス (例えば ``mypackage.backends.whatever``) を指定できます。全く新し
    いデータベースバックエンドの作成は、読者の皆さんに委ねます。他のバック
    エンドの例を参照してください。

.. setting:: DATABASE_HOST

DATABASE_HOST
-------------

デフォルト値: ``''`` (空文字列)

データベース接続先のホストを指定します。空にしておくと localhost になります。
SQLite では使いません。

この変数がスラッシュ (``'/'``) で始まっていて、 MySQL を使っている場合、
MySQL は指定された Unix ソケットを介して接続します。例えば::

    DATABASE_HOST = '/var/run/mysql'

のように指定します。 MySQL を使っていて、この変数がスラッシュで始まっていな
い場合には、この変数はホスト名として扱われます。

PostgreSQL を使っている場合、 ``DATABASE_HOST`` に空文字列を指定すると、
Unix ドメインソケットを使った接続を意味します。ローカルホストに対する
TCP/IP 接続を指定したければ ``localhost`` と指定してください。

.. setting:: DATABASE_NAME

DATABASE_NAME
-------------

デフォルト値: ``''`` (空文字列)

データベースの名前です。 SQLite の場合は、データベースファイルへのフルパス
です。

.. setting:: DATABASE_OPTIONS

DATABASE_OPTIONS
----------------

デフォルト値: ``{}`` (空の辞書)

データベースに接続するときの追加のパラメタです。利用できるキーワードは個々
のバックエンドモジュールのドキュメントを参照してください。

.. setting:: DATABASE_PASSWORD

DATABASE_PASSWORD
-----------------

デフォルト値: ``''`` (空文字列)

データベースに接続するときのパスワードです。SQLite では使いません。

.. setting:: DATABASE_PORT

DATABASE_PORT
-------------

デフォルト値: ``''`` (空文字列)

データベースに接続するときのポート番号です。空文字を指定するとデフォルトの
ポートを使います。SQLite では使いません。

.. setting:: DATABASE_USER
   
DATABASE_USER
-------------

デフォルト値: ``''`` (空文字列)

データベースに接続するときのユーザ名です。SQLite では使いません。

.. setting:: DATE_FORMAT

DATE_FORMAT
-----------

デフォルト値: ``'N j, Y'`` (e.g. ``Feb. 4, 2003``)

Django の admin サイトの変更履歴ページ (や、システムの他の部分で) 日付フィー
ルドの表示に使うデフォルトのフォーマットです。
:ttag:`利用可能な日付フォーマット文字 <now>` を参照してください。

``DATETIME_FORMAT`` , ``TIME_FORMAT`` , ``YEAR_MONTH_FORMAT`` および
``MONTH_DAY_FORMAT`` も参照してください。

.. setting:: DATETIME_FORMAT
   
DATETIME_FORMAT
---------------

デフォルト値: ``'N j, Y, P'`` (e.g. ``Feb. 4, 2003, 4 p.m.``)

Django の admin サイトの変更履歴ページ (や、システムの他の部分で) 日時フィー
ルドの表示に使うデフォルトのフォーマットです。
:ttag:`利用可能な日付フォーマット文字 <now>` を参照してください。

``DATE_FORMAT`` , ``TIME_FORMAT`` , ``YEAR_MONTH_FORMAT`` および
``MONTH_DAY_FORMAT`` も参照してください。

.. setting:: DEBUG

DEBUG
-----

デフォルト値: ``False``

デバッグモードのオンオフを切替えるブール値です。

settings に自作の設定項目を追加する場合、django/views/debug.py の
``HIDDEN_SETTINGS`` に注意してください。この変数は正規表現になっていて、デ
フォルトでは ``'SECRET'``, ``'PASSWORD'``, ``'PROFANITIES'`` といった文字列
を含む全ての設定の DEBUG ビューへの表示を抑制して、信頼されていないユーザが
バックトレースから重要な (あるいは攻撃的な) 設定項目を見なくてすむようにし
ているからです。

また、デバッグ出力の様々な情報は、いついかなる状況でも衆目に晒すべきもので
はないということを心得ておきましょう。ファイルパス、各設定項目などは、攻撃
者に対してサーバの様々な情報を与えてしまいます。

また、 ``DEBUG`` をオンにして Django を起動すると、Django は実行した SQL ク
エリを全て記憶してしまうことも忘れないでください。この機能はデバッグ時には
便利ですが、運用時に使うとあっという間にメモリを消費してしまうでしょう。

決して ``DEBUG`` をオンにしたままサーバを運用しないでください。

DEBUG_PROPAGATE_EXCEPTIONS
--------------------------

.. versionadded:: 1.0

デフォルト値: ``False``

``True`` にすると、 Django が通常ビュー関数に対して行っている例外処理が抑制
され、例外がそのまま送出されるようになります。テスト時に便利な機能ですが、
実運用環境で使うべきではありません。

.. setting:: DEFAULT_CHARSET

DEFAULT_CHARSET
---------------

デフォルト値: ``'utf-8'``

全ての ``HttpResponse`` オブジェクトで、MIME タイプを手動で指定しなかった場
合に使われるデフォルトの文字セットです。 ``Content-Type`` ヘッダの生成時に
``DEFAULT_CONTENT_TYPE`` とともに使われます。

.. setting:: DEFAULT_CONTENT_TYPE

DEFAULT_CONTENT_TYPE
--------------------

デフォルト値: ``'text/html'``

全ての ``HttpResponse`` オブジェクトで、MIME タイプを手動で指定しなかった場
合に使われるデフォルトのコンテンツタイプです。 ``Content-Type`` ヘッダの生
成時に ``DEFAULT_CHARSET`` とともに使われます。

.. setting:: DEFAULT_FROM_EMAIL

DEFAULT_FILE_STORAGE
--------------------

デフォルト値: ``django.core.files.storage.FileSystemStorage``

特定のストレージシステムに依存せずにファイル関連の操作を行うときに使う、
デフォルトのファイルストレージクラスです。 :ref:`topics-files` を参照してく
ださい。

DEFAULT_FROM_EMAIL
------------------

デフォルト値: ``'webmaster@localhost'``

サイト管理者からのさまざまな自動応答で使われるデフォルトの e-mail アドレス
です。

.. setting:: DEFAULT_TABLESPACE

DEFAULT_TABLESPACE
------------------

.. versionadded:: 1.0

デフォルト値: ``''`` (空文字列)

テーブルスペース名を明示していないモデルに使われるテーブルスペース
名です。バックエンドがサポートしている場合に限って有効です。

.. setting:: DEFAULT_INDEX_TABLESPACE

DEFAULT_INDEX_TABLESPACE
------------------------

.. versionadded:: 1.0

デフォルト値: ``''`` (空文字列)

テーブルスペース名を明示していないフィールドインデクスに使われるテーブルス
ペース名です。バックエンドがサポートしている場合に限って有効です。

.. setting:: DISALLOWED_USER_AGENTS

DISALLOWED_USER_AGENTS
----------------------

デフォルト値: ``()`` (空のタプル)

システム全体にわたり、ページの閲覧を許さないクライアントの User-Agent を表
すコンパイル済みの正規表現オブジェクトからなるリストです。相手にしたくない
ロボットやクローラがいる場合に使って下さい。この設定は ``CommonMiddleware``
がインストールされている場合にしか使われません。
(:ref:`topics-http-middleware` を参照してください)。

.. setting:: EMAIL_HOST

EMAIL_HOST
----------

デフォルト値: ``'localhost'``

e-mail の送信に使われるホスト名です。

``EMAIL_PORT`` も参照してください。

.. setting:: EMAIL_HOST_PASSWORD

EMAIL_HOST_PASSWORD
-------------------

デフォルト値: ``''`` (空文字列)

``EMAIL_HOST`` に指定した SMTP サーバにアクセスする際のパスワードです。この
設定は ``EMAIL_HOST_USER`` と組み合わせて、 SMTP サーバの認証に使われます。
``EMAIL_HOST_USER`` と ``EMAIL_HOST_PASSWORD`` のどちらかが空文字列の場合、
Django は SMTP への認証を試みません。

``EMAIL_HOST_USER`` も参照してください。

.. setting:: EMAIL_HOST_USER

EMAIL_HOST_USER
---------------

デフォルト値: ``''`` (空文字列)

``EMAIL_HOST`` で定義されている SMTP サーバへのアクセスに使われるユーザ名で
す。空文字列の場合、 Django は SMTP への認証を試みません。

``EMAIL_HOST_PASSWORD`` も参照してください。

.. setting:: EMAIL_PORT

EMAIL_PORT
----------

デフォルト値: ``25``

``EMAIL_HOST`` で定義されている SMTP サーバのポート番号です。

.. setting:: EMAIL_SUBJECT_PREFIX

EMAIL_SUBJECT_PREFIX
--------------------

デフォルト値: ``'[Django] '``

``django.core.mail.mail_admins`` や ``django.core.mail.mail_managers`` が送
信するメールの題名に使われるプレフィクスです。末尾にはスペースを入れておいた
方がよいでしょう。

.. setting:: EMAIL_USE_TLS

EMAIL_USE_TLS
-------------

.. versionadded:: 1.0

デフォルト値: ``False``

SMTP サーバとの通信に TLS (安全な接続) を使うかどうかを指定します。

.. setting:: FILE_CHARSET

FILE_CHARSET
------------

.. versionadded:: 1.0

デフォルト値: ``'utf-8'``

テンプレートファイルや SQL のデータファイルなどのファイルをファイルシステム
から読み出すときに使う文字エンコーディングです。

.. setting:: FILE_UPLOAD_HANDLERS

FILE_UPLOAD_HANDLERS
--------------------

.. versionadded:: 1.0

デフォルト値::

    ("django.core.files.fileuploadhandler.MemoryFileUploadHandler",
     "django.core.files.fileuploadhandler.TemporaryFileUploadHandler",)

ファイルアップロード時に使うハンドラを指定するタプルです。詳しくは 
:ref:`topics-files` を参照してください。

.. setting:: FILE_UPLOAD_MAX_MEMORY_SIZE

FILE_UPLOAD_MAX_MEMORY_SIZE
---------------------------

.. versionadded:: 1.0

デフォルト値: ``2621440`` (2.5 MB).

アップロード中のファイルをファイルシステム上にストリーム書き込み開始するま
でに受け入れる最大サイズ (単位バイト) です。詳しくは :ref:`topics-files` を
参照してください。

.. setting:: FILE_UPLOAD_TEMP_DIR

FILE_UPLOAD_TEMP_DIR
--------------------

.. versionadded:: 1.0

デフォルト値: ``None``

アップロード中のファイルを一時的に保存するためのディレクトリです。 ``None``
に指定すると、オペレーティングシステムごとに標準の一時ディレクトリを使いま
す。例えば、 \*nix スタイルのオペレーティングシステムでは '/tmp' です。

詳しくは :ref:`topics-files` を参照してください。

.. setting:: FILE_UPLOAD_PERMISSIONS

FILE_UPLOAD_PERMISSIONS
-----------------------

デフォルト値: ``None``

アップロードされたファイルに設定するファイルモードで、数字で表現
(例: ``0644``) します。ファイルモードの意味は `os.chmod のドキュメント`_ を
参照してください。

この値を設定しないか、 ``None`` にすると、アップロードされたファイルのモー
ドはオペレーティングシステムに依存します。ほとんどのプラットフォームでは、
一時ファイルのファイルモードは ``0600`` で、メモリからファイルにデータを書
き出すときにはシステム標準の umask を使います。

.. warning::

    **ファイルモードの先頭には常に ``0`` をつけてください**.

    ファイルモードにあまりくわしくないのなら、先頭の ``0`` がとても
    重要だということに注意してください。先頭の 0 は、値が 8 進数で
    あることを示しています。 ``644`` のように指定すると、全くおかし
    な挙動になってしまうでしょう。
    
.. _documentation for os.chmod: http://docs.python.org/lib/os-file-dir.html 
.. _`os.chmod のドキュメント`: `documentation for os.chmod`_

.. setting:: FIXTURE_DIRS

FIXTURE_DIRS
-------------

デフォルト値: ``()`` (空のタプル)

フィクスチャデータファイルの検索対象ディレクトリを順に挙げたリストです。
パスの表記は (Windows 環境でも) Unix 形式の前向きスラッシュにせねばなりませ
ん。 :ref:`topics-testing` も参照してください。

FORCE_SCRIPT_NAME
------------------

デフォルト値: ``None``

``None`` に指定すると、 HTTMP リクエストの ``SCRIPT_NAME`` 環境変数の代わり
に指定値を使います。この設定は、サーバが指定する ``SCRIPT_NAME`` の内容を上
書きしたり、 ``SCRIPT_NAME`` を空にしたりするために使えます。

.. setting:: IGNORABLE_404_ENDS

IGNORABLE_404_ENDS
------------------

デフォルト値: ``('mail.pl', 'mailform.pl', 'mail.cgi', 'mailform.cgi', 'favicon.ico', '.php')``

``IGNORABLE_404_STARTS`` と
「 :ref:`電子メールによるエラー通知 <howto-error-reporting>` 」を参照してく
ださい。

.. setting:: IGNORABLE_404_STARTS

IGNORABLE_404_STARTS
--------------------

デフォルト値: ``('/cgi-bin/', '/_vti_bin', '/_vti_inf')``

404 通知 e-mail を使っている場合、このタプルに指定した文字列から始まる URL
は無視されます。 ``SEND_BROKEN_LINK_EMAILS``, ``IGNORABLE_404_ENDS`` および
:ref:`電子メールによるエラー通知 <howto-error-reporting>` も参照してくださ
い。

.. setting:: INSTALLED_APPS

INSTALLED_APPS
--------------

デフォルト値: ``()`` (空のタプル)

現在の Django インストール下で有効にしたい全てのアプリケーションを表す文字
列のタプルです。各文字列は、 :djadmin:`django-admin.py startapp <startapp>`
で作成した Django アプリケーションの入った Python パッケージを示す完全な
Python パスでなければなりません。

.. setting:: INTERNAL_IPS

INTERNAL_IPS
------------

デフォルト値: ``()`` (空のタプル)

文字列で表した IP アドレスのタプルです。

    * ``DEBUG`` が ``True`` の場合、デバッグコメント中に表示されます。
    * ``XViewMiddleware`` がインストールされている場合、X ヘッダを受信しま
      す。(:ref:`topics-http-middleware` も参照してください。)

.. setting:: JING_PATH

JING_PATH
---------

デフォルト値: ``'/usr/bin/jing'``

"Jing" 実行形式へのパスです。 Jung は RELAX NG バリデータで、 Django はモデ
ルの ``XMLField`` のバリデーションに "Jing" を使います。

http://www.thaiopensource.com/relaxng/jing.html を参照してください。

.. setting:: LANGUAGE_CODE

LANGUAGE_CODE
-------------

デフォルト値: ``'en-us'``

現在の Django インストールにおける言語コード文字列です。この値は標準の言語
指定形式にせねばなりません。たとえば U.S. English は ``"en-us"`` にします。
:ref:`topics-i18n` も参照してください。

.. setting:: LANGUAGE_COOKIE_NAME

LANGUAGE_COOKIE_NAME
--------------------

.. versionadded:: 1.0

デフォルト値: ``'django_language'``

言語情報を記憶するために使うクッキーの名前です。 ``SESSION_COOKIE_NAME``
の設定値と同じでなければ、どんな名前にしてもかまいません。詳しくは
:ref:`topics-i18n` を参照してください。

.. setting:: LANGUAGES

LANGUAGES
---------

デフォルト値: 利用可能な言語からなるタプルです。このリストには頻繁に新たな
言語が登場しているので、そのコピーをここに記載していてもすぐに古い情報になっ
てしまいます。現在サポートされている言語のリストは手元のソースコード中の
``django/conf/global_settings.py`` (または `オンラインのソースコード`_) を
参照してください。

.. _online source: http://code.djangoproject.com/browser/django/trunk/django/conf/global_settings.py
.. _`オンラインのソースコード`: `online source`_

このリストは、例えば ``('ja', 'Japanese')`` のように、 (言語コード, 言語名)
の形式のタプルでできており、国際化機能で選択可能な言語を指定するために使い
ます。詳しくは :ref:`topics-i18n` を参照してください。

一般に、デフォルト値をいじる必要はありません。Django が提供している言語セッ
トの選択肢を狭めたい場合のみ設定してください。

カスタムの ``LANGUAGE`` 設定を定義する場合、(上の例に示したように) 各言語を
翻訳文字列として定義してかまいませんが、 ``django.utils.translation`` の
``gettext()`` 関数ではなく、「ダミーの」 ``gettext()`` を使うようにしてくだ
さい。設定ファイル内では *決して* ``django.utils.translation`` を import し
ないでください。このモジュールは settings の内容に依存しているため、循環
import を引き起こしてしまうからです。

解決方法は、上でも述べたように「ダミーの」 ``gettext()`` を使うというもので
す。以下に設定ファイルの例を示します::

    gettext = lambda s: s

    LANGUAGES = (
        ('de', gettext('German')),
        ('en', gettext('English')),
    )

このような書き方をした場合、 ``django-admin.py makemessage`` は翻訳対象文字
列をきちんと取り出せます。しかし、実行時に翻訳は行われません。従って、実行
時に ``LANGUAGES`` を使うようなコードでは、 *本当の* ``gettext()`` を使って
言語名をラップするようにしてください。

.. setting:: LOCALE_PATHS

LOCALE_PATHS
------------

デフォルト値: ``()`` (空のタプル)

Django が翻訳ファイルを探しに行く場所を指定するためのタプルです。
この変数の詳細とデフォルトの動作については、
:ref:`translations-in-your-own-projects` を参照してください。

.. setting:: LOGIN_REDIRECT_URL

LOGIN_REDIRECT_URL
------------------

.. versionadded:: 1.0

デフォルト値: ``'/accounts/profile/'``

``controb.auth.login`` ビューに ``next`` パラメタが指定されていない場合の、
デフォルトのリダイレクト先 URL です。

:func:`~django.contrib.auth.decorators.login_required` デコレータを利用する
ときなどに使う設定です。

.. setting:: LOGIN_URL

LOGIN_URL
---------

.. versionadded:: 1.0

デフォルト値: ``'/accounts/login/'``

:func:`~django.contrib.auth.decorators.login_required`  デコレータを利用す
るときなどに、ログインページへのリダイレクト先として使う設定です。

.. setting:: LOGOUT_URL

LOGOUT_URL
----------

.. versionadded:: 1.0

デフォルト値: ``'/accounts/logout/'``

LOGIN_URL の対極にあたる、ログアウトページへのリダイレクト URL です。

.. setting:: MANAGERS

MANAGERS
--------

デフォルト値: ``()`` (空のタプル)

``ADMINS`` と同じ形式のタプルで、 ``SEND_BROKEN_LINK_EMAILS=True`` の時に壊
れたリンクの通知を受けるメンバを指定します。

.. setting:: MEDIA_ROOT

MEDIA_ROOT
----------

デフォルト値: ``''`` (空文字列)

現在の Django インストールにおいて、メディアファイルを収めているディレクト
リへの絶対パスです。例えば ``"/home/media/media.lawrence.com/"`` です。
``MEDIA_URL`` も参照してください。

.. setting:: MEDIA_URL

MEDIA_URL
---------

デフォルト値: ``''`` (空文字列)

``MEDIA_ROOT`` で提供されているメディアファイルを扱う URL です。例えば
``"http://media.lawrence.com"`` です。

URL にパス部を含める場合、末尾はスラッシュにせねばなりません。

良い例: ``"http://www.example.com/static/"``
悪い例: ``"http://www.example.com/static"``

.. setting:: MIDDLEWARE_CLASSES

MIDDLEWARE_CLASSES
------------------

デフォルト値::

    ("django.contrib.sessions.middleware.SessionMiddleware",
     "django.contrib.auth.middleware.AuthenticationMiddleware",
     "django.middleware.common.CommonMiddleware",
     "django.middleware.doc.XViewMiddleware")

利用するミドルウェアクラスの Python パス名からなるタプルです。
:ref:`topics-http-middleware` も参照してください。.

.. setting:: MONTH_DAY_FORMAT

MONTH_DAY_FORMAT
----------------

デフォルト値: ``'F j'``

Django の admin サイトにおける変更リストの日付フィールドの他、システムの各
所で月と日だけを表示する際に使われるデフォルトのフォーマットです。

例えば、 Django の admin サイトにおける変更リストページを日付による絞り込み
でフィルタする場合、指定日のヘッダには日と月が表示されます。ロケールによっ
ては異なったフォーマットになります。例えば、 U.S. English での "January 1"
は、スペイン語では "1 Enero." です。

:ttag:`利用可能な日付フォーマット文字 <now>` を参照してください。
``DATE_FORMAT``, ``DATETIME_FORMAT`` , ``TIME_FORMAT`` ,
``YEAR_MONTH_FORMAT`` も参照してください。

.. setting:: PREPEND_WWW

PREPEND_WWW
-----------

デフォルト値: ``False``

URL にサブドメイン名 "www." が付いていない場合に付加するかどうかを決めます。
``CommonMiddleware`` がインストールされている場合にのみ使われる設定です
(:ref:`topics-http-middleware` を参照してください)。 ``APPEND_SLASH`` も参
照してください。

.. setting:: PROFANITIES_LIST

PROFANITIES_LIST
----------------

非道徳的な言葉 (profanity) のタプルです。 ``hasNoProfanities`` バリデータが
呼び出された際に、エラーを引き起こす単語のリストに使われます。

デフォルト値はここでは示しません。不道徳な言葉が入っているからです。デフォ
ルト値を見たければ、 ``django/conf/global_settings.py`` を参照してください。

.. setting:: ROOT_URLCONF

ROOT_URLCONF
------------

デフォルト値: 定義されていません

ルート URLconf への完全な Python import パスを表す表す文字列です。例えば、
``"mydjangoapps.urls"`` です。ルート URLconf は、 ``HttpRequest`` オブジェ
クトに ``urlconf`` 属性を設定することで変更できます。
詳しくは :ref:`how-django-processes-a-request` を参照してください。

.. setting:: SECRET_KEY

SECRET_KEY
----------

デフォルト値: ``''`` (空文字列)

Django インストール毎に固有の秘密の鍵です。秘密鍵を使ったハッシュアルゴリズ
ムのシードを生成するために使います。この値はランダムな文字列に指定してくだ
さい。長ければ長いほど好ましくなります。 ``django-admin.py startproject`` 
を実行すると、自動的に値を生成します。

.. setting:: SEND_BROKEN_LINK_EMAILS

SEND_BROKEN_LINK_EMAILS
-----------------------

デフォルト値: ``False``

Django で作られたページに空でないリファラつきで訪問した人が 404 に遭遇した
(すなわち、リンクが壊れていた) 場合に、 ``MANAGERS`` に e-mail を送信するか
どうかを決めます。この設定は ``CommonMiddleware`` がインストールされている
場合にしか使われません。(:ref:`topics-http-middleware` を参照してください。)
``IGNORABLE_404_STARTS``, ``IGNORABLE_404_ENDS`` および
:ref:`howto-error-reporting` も参照してください。

.. setting:: SERIALIZATION_MODULES

SERIALIZATION_MODULES
---------------------

デフォルト値: 定義されていません

シリアライザのモジュールパスを (文字列) 指定した辞書です。辞書のキーはシリ
アライザの識別名にします。例えば、 YAML のシリアライザを定義するには以下の
ようにします::

    SERIALIZATION_MODULES = { 'yaml' : 'path.to.yaml_serializer' }

.. setting:: SERVER_EMAIL

SERVER_EMAIL
------------

デフォルト値: ``'root@localhost'``

``ADMINS`` や ``MANAGERS`` にエラーメッセージを送信するときの送信元の
e-mail アドレスです。

.. setting:: SESSION_ENGINE

SESSION_ENGINE
--------------

.. versionadded:: 1.0

デフォルト値: ``django.contrib.sessions.backends.db``

Django がセッションデータを保存する方法を指定します。利用できる値は以下の通
りです:

    * ``'django.contrib.sessions.backends.db'``
    * ``'django.contrib.sessions.backends.file'``
    * ``'django.contrib.sessions.backends.cache'``

詳しくは :ref:`topics-http-sessions` を参照してください。

.. setting:: SESSION_COOKIE_AGE

SESSION_COOKIE_AGE
------------------

デフォルト値: ``1209600`` (秒単位で 2 週間)

セッションクッキーの寿命を秒で表したものです。 :ref:`topics-http-sessions`
も参照してください。 

.. setting:: SESSION_COOKIE_DOMAIN

SESSION_COOKIE_DOMAIN
---------------------

デフォルト値: ``None``

セッションクッキーを使うドメインです。クロスドメインのクッキーを使う場合に
は ``".lawrence.com"`` といった値に、通常のドメイン内クッキーの場合には
``None`` を指定します。 :ref:`topics-http-sessions`  も参照してください。

.. setting:: SESSION_COOKIE_NAME

SESSION_COOKIE_NAME
-------------------

デフォルト値: ``'sessionid'``

セッションに使うクッキーの名前です。 ``LANGUAGE_COOKIE_NAME`` の値と同じで
なければ、どんな名前にしてもかまいません。 :ref:`topics-http-sessions` も参
照してください。

.. setting:: SESSION_COOKIE_PATH

SESSION_COOKIE_PATH
-------------------

.. versionadded:: 1.0

デフォルト値: ``'/'``

セッションクッキーをセットするパスです。 Django インスタンスの URL パスか、
その上の階層の URL パスでなければなりません。

この設定は、同じホスト名の下で、複数の Django インスタンスが稼働している場
合に便利です。サイト毎に別々のクッキーパスを指定でき、その場合には各サイト
のインスタンスが固有のセッションクッキーを参照するようになります。

.. setting:: SESSION_COOKIE_SECURE

SESSION_COOKIE_SECURE
---------------------

デフォルト値: ``False``

セッションクッキーにセキュアなクッキーを使うかどうかを決めます。この値を
``True`` に設定すると、クッキーは "セキュア" にマークされます。クッキーがセ
キュアにマークされると、ブラウザによっては HTTPS 接続でのみクッキーを転送す
るようになります。詳しくは :ref:`topics-http-sessions` を参照してください。

.. setting:: SESSION_EXPIRE_AT_BROWSER_CLOSE

SESSION_EXPIRE_AT_BROWSER_CLOSE
-------------------------------

デフォルト値: ``False``

ブラウザを閉じたときにセッションを期限切れにするかどうかを決めます。
:ref:`topics-http-sessions` を参照してください。

.. setting:: SESSION_FILE_PATH

SESSION_FILE_PATH
-----------------

.. versionadded:: 1.0

デフォルト値: ``None``

ファイルベースのセッションストレージを使っている場合、この値でセッションデー
タの保存場所を指定します。詳しくは :ref:`topics-http-sessions` を参照してく
ださい。デフォルト値 (``None``) にすると、システム標準の一時ディレクトリを
使います。

.. setting:: SESSION_SAVE_EVERY_REQUEST

SESSION_SAVE_EVERY_REQUEST
--------------------------

デフォルト値: ``False``

リクエストごとにセッションデータを保存するかどうかを決めます。
:ref:`topics-http-sessions` も参照してください。

.. setting:: SITE_ID

SITE_ID
-------

デフォルト値: 定義されていません

``django_sites`` データベース中で現在のサイトを示す ID の整数値です。この値
は、アプリケーションデータが特定のサイトに対してフックできるようにし、一つ
のデータベースで複数のサイトのコンテンツを管理できるようにするためのもので
す。

:ref:`ref-contrib-sites` を参照してください。

.. setting:: TEMPLATE_CONTEXT_PROCESSORS

TEMPLATE_CONTEXT_PROCESSORS
---------------------------

デフォルト値::

    ("django.core.context_processors.auth",
    "django.core.context_processors.debug",
    "django.core.context_processors.i18n",
    "django.core.context_processors.media")

``RequestContext`` のコンテキストに値を入れてゆく際に使われる呼び出し可能オ
ブジェクトからなるタプルです。これらの呼び出し可能オブジェクトはリクエスト
オブジェクトを引数にとり、コンテキストに統合する項目からなる辞書を返します。

.. setting:: TEMPLATE_DEBUG

TEMPLATE_DEBUG
--------------

デフォルト値: ``False``

テンプレートのデバッグモードのオンオフを切替えるブール値です。この値を
``True`` にすると、 ``TemplateSyntaxError`` を報告する際にファンシーなエラー
ページを出力します。この報告にはエラーに関係するテンプレートの一部分が表示
され、問題のある部分がハイライト表示されます。

Django は ``DEBUG`` が ``True`` の場合にのみエラーページを表示するので、こ
の設定の恩恵をうけたければ ``DEBUG`` を設定しておく必要があります。

``DEBUG`` も参照してください。

.. setting:: TEMPLATE_DIRS

TEMPLATE_DIRS
-------------

デフォルト値: ``()`` (空のタプル)

テンプレートソースファイルの入っている場所を検索順に並べたリストです。パス
の区切りには Windows であっても Unix 形式のスラッシュを使って下さい。

:ref:`topics-templates` も参照してください。.

.. setting:: TEMPLATE_LOADERS

TEMPLATE_LOADERS
----------------

デフォルト値::

     ('django.template.loaders.filesystem.load_template_source',
      'django.template.loaders.app_directories.load_template_source')

様々なソースからのテンプレートの import を実装している、呼び出し可能オブジェ
クト (を指す文字列) のタプルです。 :ref:`ref-templates-api` も参照してくだ
さい。

.. setting:: TEMPLATE_STRING_IF_INVALID

TEMPLATE_STRING_IF_INVALID
--------------------------

デフォルト値: ``''`` (空文字列)

誤った (スペルを間違えたなど) 変数名に対してテンプレートシステムが出力する
文字列です。 :ref:`invalid-template-variables` を参照してください。

.. setting:: TEST_DATABASE_CHARSET

TEST_DATABASE_CHARSET
---------------------

.. versionadded:: 1.0

デフォルト値: ``None``

テストデータベースの作成に使われている文字セットエンコーディングです。この
文字列の値はデータベースバックエンドに直接渡されるので、エンコーディングの
名前や書式はバックエンドごとに異なります。

この設定をサポートしているバックエンドは、 PostgreSQL_ (``postgresql``,
``postgresql_psycopg2``) と MySQL_ (``mysql``) です。

.. _PostgreSQL: http://www.postgresql.org/docs/8.2/static/multibyte.html
.. _MySQL: http://www.mysql.org/doc/refman/5.0/en/charset-database.html

.. setting:: TEST_DATABASE_COLLATION

TEST_DATABASE_COLLATION
------------------------

.. versionadded:: 1.0

デフォルト値: ``None``

テストデータベースを生成する際のコレーション (collation) です。この値はデー
タベースバックエンドに直接渡されるので、値の書式はバックエンドごとに異なり
ます。

``mysql`` バックエンドだけでサポートされています(くわしくは、MySQLマニュア
ルの `10.3.2節` を参照してください)

.. _section 10.3.2: http://www.mysql.org/doc/refman/5.0/en/charset-database.html
.. _`10.3.2節`: http://www.mysql.org/doc/refman/5.0/ja/charset-database.html

.. setting:: TEST_DATABASE_NAME

TEST_DATABASE_NAME
------------------

デフォルト値: ``None``

テストスイートを実行するときに使うデータベースの名前です。

データベースエンジンが SQLite のときにデフォルト値 (``None``) を指定すると、
テストのためのデータベースはメモリ上に展開されます。他のデータベースエンジ
ンの場合、テストデータベースの名前として ``'test_'`` +
``settings.DATABASE_NAME`` を使います。

:ref:`topics-testing` を参照してください。

.. setting:: TEST_RUNNER

TEST_RUNNER
-----------

デフォルト値: ``'django.test.simple.run_tests'``

テストスイートを起動するためのメソッドの名前です。 :ref:`topics-testing` を
参照してください。

.. setting:: TIME_FORMAT

TIME_FORMAT
-----------

デフォルト値: ``'P'`` (e.g. ``4 p.m.``)

Django の admin サイトの変更履歴ページ (や、システムの他の部分で) 時刻フィー
ルドの表示に使うデフォルトのフォーマットです。 

:ttag:`利用可能な日付フォーマット文字 <now>` を参照してください。

``DATE_FORMAT`` , ``DATETIMETIME_FORMAT`` , ``YEAR_MONTH_FORMAT`` および
``MONTH_DAY_FORMAT`` も参照してください。

.. setting:: TIME_ZONE

TIME_ZONE
---------

デフォルト値: ``'America/Chicago'``

現在の Django インストールが使うタイムゾーンを表す文字列です。
`利用可能な選択肢`_ を参照してください。(利用可能な選択肢には、同じ行に複数
の選択肢をリストしていることに注意してください。あるタイムゾーンを表すには
いずれか一つを選ぶことになります。例えば、ある行に ``'Europe/London GB
GB-Eire'`` と書かれている場合、 ``TIME_ZONE`` の設定には、最初の部分である
``'Europe/London'`` だけを使います)この値は Django が全ての日付/時刻の変換
に使うタイムゾーンであり、かならずしもサーバのタイムゾーンとは一致しないこ
とに注意して下さい。例えば、一つのサーバで複数の Django サイトを運営し、個々
に別々のタイムゾーン設定を持たせてもかまいません。

通常、 Django は ``TIME_ZONE`` の設定に従って ``os.environ['TZ']`` 変数を設
定します。そのため、ビューやモデルは自動的に正しいタイムゾーンを扱えるよう
になります。しかしながら、後述の手動設定オプションを使っている場合 (下参照)、
Django は ``TZ`` 環境変数を *操作しない* ので、ユーザは自分の責任でプロセス
を正しい環境の下で動作させねばなりません。

.. note::
    Windows 環境では、 Django は信頼性のある方法でタイムゾーンを変更できま
    せん。 Windows で Django を動作させる場合、この変数はシステムのタイムゾー
    ンと一致させねばなりません。
    
.. _See available choices: http://www.postgresql.org/docs/8.1/static/datetime-keywords.html#DATETIME-TIMEZONE-SET-TABLE
.. _`利用可能な選択肢`: `See available choices`_

.. setting:: URL_VALIDATOR_USER_AGENT

URL_VALIDATOR_USER_AGENT
------------------------

デフォルト値: ``Django/<version> (http://www.djangoproject.com/)``

特定の URL が実在するかを Django が調べにゆく際に使う ``User-Agent`` ヘッダ
の値です。 (:class:`~django.db.models.URLField` の ``verify_exists`` を参照
してください。)

.. setting:: USE_ETAGS

USE_ETAGS
---------

デフォルト値: ``False``

出力に "Etag" ヘッダを含めるかどうかを決めるブール値です。 "Etag" を含める
と帯域の節約になりますが、パフォーマンスは低下します。この設定は
``CommonMiddleware`` がインストールされている場合にしか使われません。
(:ref:`topics-http-middleware` を参照してください。)

.. setting:: USE_I18N

USE_I18N
--------

デフォルト値: ``True``

国際化システムを有効にするかどうかを決めるブール値です。この設定を使うと、
パフォーマンス向上のために簡単に国際化システムを無効化できます。この値を
``False`` にすると、 Django は国際化機構をロードしないような最適化を行いま
す。

.. setting:: YEAR_MONTH_FORMAT

YEAR_MONTH_FORMAT
-----------------

デフォルト値: ``'F Y'`` 

Django の admin サイトにおける変更リストの日付フィールドの他、システムの各
所で年と月だけを表示する際に使われるデフォルトのフォーマットです。

例えば、 Django の admin サイトにおける変更リストページを日付による絞り込み
でフィルタする場合、指定月のヘッダには月と年が表示されます。ロケールによっ
ては異なったフォーマットになります。例えば、 U.S. English での 
"January 2006" は、別のロケールでは "2006/January" になるかもしれません。

:ttag:`利用可能な日付フォーマット文字 <now>` を参照してください。
``DATE_FORMAT`` , ``DATETIME_FORMAT`` , ``TIME_FORMAT`` および
``MONTH_DAY_FORMAT`` も参照してください。
